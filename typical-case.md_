# 典型案例

## 支持 https 吗

https://github.com/HttpRunner/HttpRunner/issues/15
https://github.com/HttpRunner/HttpRunner/issues/39

底层是完全复用的requests，所以只要requests支持的功能，这款框架都支持。另外，如果你测试的https网站没有证书，你可以采用 verify=False 来关闭校验。

参考链接：http://docs.python-requests.org/en/master/api/#requests.request

## post只支持application/json吗？可以支持application/x-www-form-urlencoded的编码方式吗？

https://github.com/HttpRunner/HttpRunner/issues/17

底层是完全复用的requests，所以只要requests支持的功能，这款框架都支持。

参考链接：http://docs.python-requests.org/en/master/api/#requests.request

## 如何实现接口之间参数的关联？

https://github.com/HttpRunner/HttpRunner/issues/3

登录过程中获取的token，可以在之后的testcase中使用

这个功能是已经有了的。例如下面的形式，通过`extract_binds`将token提取出来并保存到`user_token`，然后后续的请求都可以直接用了。

```yaml
- test:
    name: login with email to get user token
    request:
        url: /apis/apprest/v1/email_login
        method: POST
        headers:
            Content-Type: application/x-www-form-urlencoded
        data:
            email: $user_email
            password: $user_passwd
    extract_binds:
        user_token: content.data.token
    validators:
        - {"check": "status_code", "expected": 200}
        - {"check": "headers.content-type", "expected": "application/json;charset=UTF-8"}
        - {"check": "content.code", "expected": 0}
        - {"check": "content.message", "expected": "ok"}

- test:
    name: /api/users/user_id/home
    request:
        url: /api/users/$user_id/home
        params:
            page: 1
            page_size: 21
            token: $user_token
        method: GET
    validators:
        - {"check": "status_code", "expected": 200}
        - {"check": "headers.content-type", "expected": "application/json; charset=utf-8"}
        - {"check": "content.status", "expected": 0}
        - {"check": "content.status_msg", "expected": "ok"}
        - {"check": "content.items", "expected": 10, "comparator": "len_gt"}
```

## validate 自定义函数支持多参数

https://github.com/HttpRunner/HttpRunner/issues/65

validate终于支持自定义函数了~
然而发现只能传入两个参数，一个是校验字段，一个是期望值。
但是有时候业务逻辑比较复杂，需要从返回值中抽取多个字段，再经过自定义函数判断是否符合断言。
比如，返回值中有start_time，end_time，断言是判断中间的时间差是否小于指定值。
目前想到的办法就是正则匹配的时候把需要的参数都匹配进去，在自定义函数中实现字段抽取&断言。
这种方式不是很优雅。

自定义校验函数的确是只能传入两个参数，但是通过灵活应用，同样能实现各种复杂的检测。
就拿你列举的案例来说，你希望检查返回值中的start_time和end_time差值是否小于指定值，那么你在编写自定义校验函数的时候，就可以在第一个参数中传入完整的返回值，第二个参数传入指定值。
然后在自定义校验函数中，先从完整的返回值中解析出start_time和end_time，然后再计算差值进行比较断言。

def validate_time_interval(content, specified_time):
    # 1、从返回结果中提取出start_time和end_time
    start_time, end_time = parse(content)

    # 2、进行比较断言
    assert end_time - start_time < specified_time

## 为什么在自定义函数中实现了登录操作，但在后续请求中没有登录态？

https://github.com/HttpRunner/HttpRunner/issues/60

在同一个`JSON/YAML`文件里面，所有的testcase都是共用的一个`requests.Session`，所以session是能共用的。
但需要注意的是，如果你将登录部分放置到了`debugtalk.py`中，那么就相当于同时初始化了两个`requests.Session`，就没法共享session了。